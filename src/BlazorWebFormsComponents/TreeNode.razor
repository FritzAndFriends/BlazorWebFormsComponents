@{
	string nodeImg = string.IsNullOrEmpty(ParentTreeView.ImageSet.Collapse) ? $"{ImageLocation}Default_NoExpand.gif" : (Expanded ? $"{ImageLocation}{ParentTreeView.ImageSet.Collapse}" : $"{ImageLocation}{ParentTreeView.ImageSet.Expand}");
	string noExpandImg = string.IsNullOrEmpty(ParentTreeView.ImageSet.Collapse) ? "" : $"{ImageLocation}{ParentTreeView.ImageSet.NoExpand}";
	string nodeText = Expanded ? $"Collapse {Text}" : $"Expand {Text}";
}
@if ((Parent?.Expanded) ?? true)
{
<table cellpadding="0" cellspacing="0" style="border-width: 0;">
	<tr>
		@for (var i = 0; i < Depth; i++)
		{
			<td><div style="width:20px;height:1px;"></div></td>
		}

		@if (ChildContent != null && ParentTreeView.ShowExpandCollapse)
		{
			<td>
				<a href="" @onclick="HandleNodeExpand" @onclick:preventDefault @onclick:stopPropagation>
					<img src="@nodeImg" alt="@nodeText" title="@nodeText" style="border-width: 0;" />
				</a>
			</td>
		}
		else if (!(Parent is null)) // && ParentTreeView.ShowExpandCollapse)
		{
			<td><img src="@noExpandImg" alt="" /></td>
		}

		@if (!string.IsNullOrEmpty(ImageUrl))
		{

			if (string.IsNullOrEmpty(NavigateUrl))
			{
				<td>
					<img src="@ImageUrl" alt="@ImageToolTip" title="@ImageToolTip" style="border-width:0;" />
				</td>
			}
			else
			{
				<td>
					<a href="@NavigateUrl" target="@Target" title="@ToolTip" id="MainContent_SampleTreeViewt0">
						<img src="@ImageUrl" alt="@ImageToolTip" title="@ImageToolTip" style="border-width:0;" />
					</a>
				</td>
			}
		}

		<td style="white-space: nowrap;">

			@if (ParentTreeView.ShowCheckBoxes != Enums.TreeNodeTypes.None)
			{

				var isRoot = (ParentTreeView.ShowCheckBoxes.HasFlag(Enums.TreeNodeTypes.Root) && Depth == 0);
				var isParent = ParentTreeView.ShowCheckBoxes.HasFlag(Enums.TreeNodeTypes.Parent) && (Depth > 0 && !(ChildContent is null));
				var isLeaf = ParentTreeView.ShowCheckBoxes.HasFlag(Enums.TreeNodeTypes.Leaf) && (ChildContent is null);

				@if (ShowCheckBox && (isRoot || isParent || isLeaf))
				{
					<input type="checkbox" checked="@(Checked ? "checked" : null)" @onchange="args => { HandleCheckbox(this, args); }" />
				}

			}

			<a href="@NavigateUrl" target="@Target" title="@ToolTip" id="MainContent_SampleTreeViewt0">@Text</a>
		</td>
	</tr>
</table>
<CascadingValue Name="ParentTreeNode" Value="this">
	@ChildContent
</CascadingValue>
}
