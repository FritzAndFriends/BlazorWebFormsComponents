@inherits TestComponentBase

<Fixture Test="CollapsedTest">
	<ComponentUnderTest>
		<TreeView id="SampleTreeView"
							OnTreeNodeExpanded="RecordExpanded"
							runat="server">

			<Nodes>

				<TreeNode Value="Home"
									NavigateUrl="Home.aspx"
									Text="Home"
									Target="Content"
									Expanded="false">

					<TreeNode Value="Page 1"
										NavigateUrl="Page1.aspx"
										Text="Page1"
										Target="Content">

						<TreeNode Value="Section 1"
											NavigateUrl="Section1.aspx"
											Text="Section 1"
											Target="Content" />

					</TreeNode>

					<TreeNode Value="Page 2"
										NavigateUrl="Page2.aspx"
										Text="Page 2"
										Target="Content">

					</TreeNode>

				</TreeNode>

			</Nodes>

		</TreeView>
	</ComponentUnderTest>
</Fixture>


@code {

	private TreeNode _ExpandedNode;

	void CollapsedTest()
	{

		var cut = GetComponentUnderTest();

		cut.FindAll("table").Count().ShouldBe(1);

		var anchors = cut.FindAll("a").Where(c => c.HasAttribute("href") && !c.GetElementsByTagName("img").Any());
		anchors.Count().ShouldBe(1);

		anchors.First().GetAttribute("href").ShouldBe("Home.aspx");

		var expando = cut.FindAll("a").Where(c => c.HasAttribute("href") && c.GetElementsByTagName("img").Any()).FirstOrDefault();
		expando.ShouldNotBeNull();
		expando.Click(new MouseEventArgs());

		_ExpandedNode.ShouldNotBeNull();
		((int)_ExpandedNode.Depth).ShouldBe(0);


	}

	void RecordExpanded(object sender, TreeNodeEventArgs args) {

		_ExpandedNode = args.Node;

	}

}
