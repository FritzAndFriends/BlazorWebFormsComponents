@inherits TestComponentBase

<Fixture Test="CollapsedTest">
	<ComponentUnderTest>
		<TreeView id="SampleTreeView" runat="server">
			<Nodes>
				<TreeNode Value="Parent"
									Text="Parent"
									Expanded="false">
					<TreeNode Value="Child"
										Text="Child" />
				</TreeNode>
			</Nodes>
		</TreeView>
	</ComponentUnderTest>

	<Fragment Id="BeforeImage">
		<img src="_content/Fritz.BlazorWebFormsComponents/TreeView/Default_Expand.gif" alt="Expand Parent" title="Expand Parent" style="border-width: 0;">
	</Fragment>

	<Fragment Id="AfterImage">
		<img src="_content/Fritz.BlazorWebFormsComponents/TreeView/Default_Collapse.gif" alt="Collapse Parent" title="Collapse Parent" style="border-width: 0;">
	</Fragment>

	@code {

		private TreeNode _ExpandedNode;

		void CollapsedTest(Fixture fixture)
		{
			var cut = fixture.GetComponentUnderTest<TreeView>();
			cut.Find("img").MarkupMatches(fixture.GetFragment("BeforeImage"));

			cut.Find("a").Click();

			cut.Find("img").MarkupMatches(fixture.GetFragment("AfterImage"));
		}
	}

</Fixture>


<Fixture Test="HideTest">
	<ComponentUnderTest>
		<TreeView id="SampleTreeView" runat="server">
			<Nodes>
				<TreeNode Value="Parent"
									Text="Parent"
									Expanded="true">
					<TreeNode Value="Child"
										Text="Child" />
				</TreeNode>
			</Nodes>
		</TreeView>
	</ComponentUnderTest>

	<Fragment Id="BeforeImage">
		<img src="_content/Fritz.BlazorWebFormsComponents/TreeView/Default_Expand.gif" alt="Expand Parent" title="Expand Parent" style="border-width: 0;">
	</Fragment>

	<Fragment Id="AfterImage">
		<img src="_content/Fritz.BlazorWebFormsComponents/TreeView/Default_Collapse.gif" alt="Collapse Parent" title="Collapse Parent" style="border-width: 0;">
	</Fragment>

	@code {

		void HideTest(Fixture fixture)
		{
			var cut = fixture.GetComponentUnderTest<TreeView>();
			cut.Find("img").MarkupMatches(fixture.GetFragment("AfterImage"));

			cut.Find("a").Click();

			cut.Find("img").MarkupMatches(fixture.GetFragment("BeforeImage"));
			cut.FindAll("table").Count.ShouldBe(1);
		}
	}

</Fixture>
