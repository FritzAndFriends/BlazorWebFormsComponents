@inherits TestComponentBase

<Fixture Test="FirstTest">
	<ComponentUnderTest>
		<EditForm Model="@exampleModel" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
			Write something
			<InputText @ref="Number.Current" @bind-Value="exampleModel.Number" />
			<CompareValidator InputType="string"
												ControlToValidate="@Number"
												ValueToCompare="5"
												Type="Integer"
												Operator="DataTypeCheck"
												Text="invalid" />
		</EditForm>
	</ComponentUnderTest>
</Fixture>


@code {
	bool _validSubmit = false;
	bool _invalidSubmit = false;
	ForwardRef<InputBase<string>> Number = new ForwardRef<InputBase<string>>();

	void FirstTest(Fixture fixture)
	{

		var cut = fixture.GetComponentUnderTest();

		cut.Find("input").Change("not a number");

		cut.Find("form").Submit();

		_validSubmit.ShouldBeFalse();
		_invalidSubmit.ShouldBeTrue();

		cut.Find("span").FirstChild.TextContent.ShouldContain("invalid");
	}

	private ExampleModel exampleModel = new ExampleModel();

	private void HandleValidSubmit()
	{
		_validSubmit = true;
	}

	private void HandleInvalidSubmit()
	{
		_invalidSubmit = true;
	}

	public class ExampleModel
	{
		public string Number { get; set; }
	}
}
