@inherits TestComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims;
@using Moq;

<Fixture Test="FirstTest">
	<ComponentUnderTest>
		<BlazorWebFormsComponents.LoginControls.LoginStatus OnLoggingOut="LoggingOut" OnLoggedOut="LoggedOut" />
	</ComponentUnderTest>
</Fixture>


@code {

	bool _loggingOut = false;
	bool _loggedOut = false;

	void FirstTest(IRazorTestContext context)
	{

		var principal = new ClaimsPrincipal();
		var identity = new ClaimsIdentity(new Claim[] { new Claim(ClaimTypes.Name, "James Bond") }, "Test authentication");
		principal.AddIdentity(identity);

		var autheMock = new Mock<AuthenticationStateProvider>();
		autheMock.Setup(x => x.GetAuthenticationStateAsync()).Returns(Task.FromResult(new AuthenticationState(principal)));

		context.Services.AddService<AuthenticationStateProvider>(autheMock.Object);

		var navMock = new Mock<NavigationManager>();
		context.Services.AddService<NavigationManager>(navMock.Object);

		var cut = context.GetComponentUnderTest();

		cut.Find("a").Click();


		_loggingOut.ShouldBeTrue();
		_loggedOut.ShouldBeTrue();

	}

	void LoggingOut(BlazorWebFormsComponents.LoginControls.LoginCancelEventArgs args)
	{

		_loggingOut = true;

	}

	void LoggedOut(EventArgs args)
	{

		_loggedOut = true;

	}

}
