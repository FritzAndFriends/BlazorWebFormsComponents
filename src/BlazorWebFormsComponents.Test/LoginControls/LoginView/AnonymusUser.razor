@inherits TestComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims;
@using Moq;

<Fixture Test="FirstTest">
	<ComponentUnderTest>
		<BlazorWebFormsComponents.LoginControls.LoginView>
			<AnonymousTemplate>
				Anonymous
			</AnonymousTemplate>
			<LoggedInTemplate>
				LoggedIn
			</LoggedInTemplate>
			<ChildContent>
				<BlazorWebFormsComponents.LoginControls.RoleGroup Roles="Agent">
					Agent
				</BlazorWebFormsComponents.LoginControls.RoleGroup>
				<BlazorWebFormsComponents.LoginControls.RoleGroup Roles="Spy,Agent">
					Spy,Agent
				</BlazorWebFormsComponents.LoginControls.RoleGroup>
			</ChildContent>
		</BlazorWebFormsComponents.LoginControls.LoginView>
	</ComponentUnderTest>
</Fixture>


@code {

	void FirstTest(IRazorTestContext context)
	{

		var principal = new ClaimsPrincipal();

		var autheMock = new Mock<AuthenticationStateProvider>();
		autheMock.Setup(x => x.GetAuthenticationStateAsync()).Returns(Task.FromResult(new AuthenticationState(principal)));

		context.Services.AddService<AuthenticationStateProvider>(autheMock.Object);

		var navMock = new Mock<NavigationManager>();
		context.Services.AddService<NavigationManager>(navMock.Object);

		var cut = context.GetComponentUnderTest();

		cut.GetMarkup().Trim().ShouldBe("Anonymous");

	}

}
