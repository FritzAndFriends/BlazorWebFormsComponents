@inherits TestComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims;
@using Moq;

<Fixture Test="FirstTest">
	<ComponentUnderTest>
		<BlazorWebFormsComponents.LoginControls.LoginView>
			<AnonymousTemplate>
				Anonymous
			</AnonymousTemplate>
			<LoggedInTemplate>
				LoggedIn
			</LoggedInTemplate>
		</BlazorWebFormsComponents.LoginControls.LoginView>
	</ComponentUnderTest>
</Fixture>


@code {

	void FirstTest(IRazorTestContext context)
	{

		var principal = new ClaimsPrincipal();
		var identity = new ClaimsIdentity(new Claim[]
		{
			new Claim(ClaimTypes.Name, "Dr. Heinz Doofenshmirtz")
		}, "Test authentication");
		principal.AddIdentity(identity);

		var autheMock = new Mock<AuthenticationStateProvider>();
		autheMock.Setup(x => x.GetAuthenticationStateAsync()).Returns(Task.FromResult(new AuthenticationState(principal)));

		context.Services.AddService<AuthenticationStateProvider>(autheMock.Object);

		var navMock = new Mock<NavigationManager>();
		context.Services.AddService<NavigationManager>(navMock.Object);

		var cut = context.GetComponentUnderTest();

		cut.GetMarkup().Trim().ShouldBe("LoggedIn");

	}

}
