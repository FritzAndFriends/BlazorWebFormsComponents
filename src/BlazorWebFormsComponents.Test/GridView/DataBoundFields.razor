@inherits TestComponentBase

<Fixture Test="FirstTest">
	<ComponentUnderTest>
		<GridView ItemType="Widget"
							AutogenerateColumns="false"
							SelectMethod="GetWidgets">
			<Columns>
				<BoundField DataField="Id" HeaderText="ID" />
				<BoundField DataField="Name" HeaderText="Widget Name" />
			</Columns>
		</GridView>
	</ComponentUnderTest>
</Fixture>


@code {
		void FirstTest()
		{
			var cut = GetComponentUnderTest();
			var tableHeaders = cut.FindAll("th").ToList();
			tableHeaders[0].TextContent.ShouldBe("ID");
			tableHeaders[1].TextContent.ShouldBe("Widget Name");
			tableHeaders.Count.ShouldBe(2, "Did not render 2 TH elements");
			cut.FindAll("tr").Count(e => e.InnerHtml.Contains("td")).ShouldBe(3, "Did not render 3 TR elements");
			cut.FindAll("td").Count().ShouldBe(6, "Did not render 6 TD elements");
		}

		IQueryable<Widget> GetWidgets(int maxRows, int startRowIndex, string sortByExpression, out int totalRowCount)
		{
			totalRowCount = Widget.SimpleWidgetList.Length;
			return Widget.SimpleWidgetList.AsQueryable();
		}
}
