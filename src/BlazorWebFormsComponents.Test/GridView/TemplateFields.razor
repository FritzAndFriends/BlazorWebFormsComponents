@inherits TestComponentBase

<Fixture Test="FirstTest">
	<ComponentUnderTest>
		<GridView SelectMethod="GetWidgets"
							AutogenerateColumns="false"
							ItemType="SharedSampleObjects.Models.Widget">
			<Columns>
				<TemplateField ItemType="Widget" HeaderText="Name">
					<ItemTemplate Context="Item">
						<label Text="@Item.Name"></label>
					</ItemTemplate>
				</TemplateField>
				<TemplateField ItemType="Widget" HeaderText="Price">
					<ItemTemplate Context="Item">
						<label ID="lblPrice" Text="@Item.Price.ToString()"></label>
					</ItemTemplate>
				</TemplateField>
			</Columns>
		</GridView>
	</ComponentUnderTest>
</Fixture>

@code {

	void FirstTest(Fixture fixture)
	{
		var cut = fixture.GetComponentUnderTest();
		System.Diagnostics.Debug.Write(cut.Markup);
		var tableHeaders = cut.FindAll("th");
		tableHeaders[0].TextContent.ShouldBe("Name");
		tableHeaders[1].TextContent.ShouldBe("Price");
		tableHeaders.Count.ShouldBe(2, "Did not render 2 TH elements");
		cut.FindAll("tr").Count(e => e.InnerHtml.Contains("td")).ShouldBe(3, "Did not render 3 TR elements");
		cut.FindAll("td label").Count().ShouldBe(6, "Did not render 6 labels");
	}

	IQueryable<Widget> GetWidgets(int maxRows, int startRowIndex, string sortByExpression, out int totalRowCount)
	{
		totalRowCount = Widget.SimpleWidgetList.Length;
		return Widget.SimpleWidgetList.AsQueryable();
	}
}
