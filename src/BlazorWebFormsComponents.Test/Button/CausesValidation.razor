@inherits TestComponentBase


<Fixture Test="ButtonDoesValidate">
	<ComponentUnderTest>
		<EditForm Model="@exampleModel" OnValidSubmit="@HandleSubmit" OnInvalidSubmit="@HandleSubmit">

			<InputText id="value" @ref="Value.Current" @bind-Value="exampleModel.Value" />
			<RangeValidator ControlToValidate="@Value"
											Type="Integer"
											MinimumValue="0"
											MaximumValue="10"
											Text="Invalid"
											ErrorMessage="ErrorMessage!" />

			<Button>Submit</Button>

		</EditForm>
	</ComponentUnderTest>
</Fixture>


@code {

	ForwardRef<InputBase<string>> Value = new ForwardRef<InputBase<string>>();


	private ExampleModel exampleModel = new ExampleModel();
	private bool _SubmitHandled = false;


	void ButtonDoesValidate(Fixture fixture)
	{
		// Arrange
		var cut = fixture.GetComponentUnderTest();
		_SubmitHandled = false;

		// Act
		cut.Find("input").Change("100");
		var typeAttribute = cut.Find("button").GetAttribute("type");

		// Assert
		typeAttribute.ShouldBe("submit");

	}

	private void HandleSubmit()
	{
		_SubmitHandled = true;
	}


	public class ExampleModel
	{
		public string Value { get; set; }
	}

}
