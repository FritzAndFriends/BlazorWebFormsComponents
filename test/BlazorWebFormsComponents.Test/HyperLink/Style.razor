@inherits TestComponentBase
@using static BlazorWebFormsComponents.WebColor
@using static BlazorWebFormsComponents.Enums.BorderStyle
@using BlazorWebFormsComponents

<Fixture Test="HyperLink_Style">
	<ComponentUnderTest>
		<HyperLink Text="Blue Button" NavigationUrl="https://bing.com" BackColor="Blue" ForeColor="White" />
	</ComponentUnderTest>

	@code {
		void HyperLink_Style(Fixture fixture)
		{

			var cut = fixture.GetComponentUnderTest();

			cut.Find("a").HasAttribute("style").ShouldBeTrue();
			var style = cut.Find("a").GetAttribute("style");

			style.ShouldNotBeNull();
			style.ShouldContain("background-color:Blue");
			style.ShouldContain("color:White");

		}
	}

</Fixture>

<Fixture Test="HyperLink_Tooltip">
	<ComponentUnderTest>
		<HyperLink Text="Blue Button" NavigationUrl="https://bing.com" ToolTip="@RandomTooltip" />
	</ComponentUnderTest>

	@code {

		private string RandomTooltip = new Random(828).Next(10000, 1000000).ToString();


		void HyperLink_Tooltip(Fixture fixture)
		{

			var cut = fixture.GetComponentUnderTest();

			cut.Find("a").HasAttribute("title").ShouldBeTrue();
			var attr = cut.Find("a").GetAttribute("title");

			attr.ShouldNotBeNull();
			attr.ShouldBe(RandomTooltip);

		}

	}
</Fixture>

<Fixture Test="HyperLink_Visible">
	<ComponentUnderTest>
		<HyperLink Text="Blue Button" NavigationUrl="https://bing.com" Visible="false" />
	</ComponentUnderTest>

	@code {

		void HyperLink_Visible(Fixture fixture)
		{

			var cut = fixture.GetComponentUnderTest();

			cut.FindAll("a").Count().ShouldBe(0, "Still rendered the anchor even though its not visible");

		}

	}
</Fixture>


